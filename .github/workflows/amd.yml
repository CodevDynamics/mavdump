name: Build DEB Packages for AMD64

on:
  release:
    types: [published, created]

jobs:
  build-jammy-amd64:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          git \
          libpcap-dev \
          pkg-config \
          debhelper \
          devscripts

    - name: Build DEB package for Jammy
      run: |
        chmod +x build_deb.sh
        if [ -n "${{ github.event.release.tag_name }}" ]; then
          ./build_deb.sh --tag "${{ github.event.release.tag_name }}"
        else
          ./build_deb.sh
        fi

    - name: Upload Jammy DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: mavdump-jammy-amd64
        path: "*.deb"

  build-focal-amd64:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build DEB package for Focal using Docker
      run: |
        # 创建 Dockerfile
        cat > Dockerfile << 'EOF'
        FROM ubuntu:20.04

        # 设置非交互模式
        ENV DEBIAN_FRONTEND=noninteractive
        ENV TZ=Asia/Shanghai

        # 安装依赖
        RUN apt-get update && apt-get install -y \
            build-essential \
            cmake \
            git \
            libpcap-dev \
            pkg-config \
            debhelper \
            devscripts \
            tzdata \
            && rm -rf /var/lib/apt/lists/*

        # 设置工作目录
        WORKDIR /workspace

        # 复制源码
        COPY . .

        # 构建参数
        ARG BUILD_TAG=""

        # 构建 DEB 包
        RUN chmod +x build_deb.sh && \
            if [ -n "$BUILD_TAG" ]; then \
                ./build_deb.sh --tag "$BUILD_TAG"; \
            else \
                ./build_deb.sh; \
            fi
        EOF

        # 构建 Docker 镜像并运行
        if [ -n "${{ github.event.release.tag_name }}" ]; then
          docker build --build-arg BUILD_TAG="${{ github.event.release.tag_name }}" -t mavdump-focal-builder .
        else
          docker build -t mavdump-focal-builder .
        fi
        
        # 创建容器并复制构建结果
        docker create --name mavdump-container mavdump-focal-builder
        docker cp mavdump-container:/workspace/ ./build-output/
        docker rm mavdump-container
        
        # 移动 DEB 文件到当前目录
        find ./build-output -name "*.deb" -exec cp {} . \;

    - name: Upload Focal DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: mavdump-focal-amd64
        path: "*.deb"

  upload-to-release:
    needs: [build-jammy-amd64, build-focal-amd64]
    runs-on: ubuntu-22.04
    steps:
    - name: Download Jammy artifact
      uses: actions/download-artifact@v4
      with:
        name: mavdump-jammy-amd64
        path: ./artifacts/jammy

    - name: Download Focal artifact
      uses: actions/download-artifact@v4
      with:
        name: mavdump-focal-amd64
        path: ./artifacts/focal

    - name: Upload DEB packages to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/jammy/*.deb
          ./artifacts/focal/*.deb
        upload_url: ${{ github.event.release.upload_url }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
